int multi_fibonacci(int n, int d, int e) {
	if (n <= d) {
		return 1;
	}
	else {
		int i = 0;
		int result = 0;
		while ((i < e) && (i + d < n)) {
			result = result + multi_fibonacci(n - d - i, d, e);
			++i;
		}
		return result;
	}
}

int main() {
	int n = 4;
	int d = 1;
	int e = 2;
	int result = multi_fibonacci(n, d, e);
	putc('n');
	putc('=');
	//puts("multi_fibonacci(");
	puti(n);
	putc('\n');
	//puts(", ");
	putc('d');
    putc('=');
	puti(d);
	putc('\n');
	//puts(", ");
	putc('e');
    putc('=');
	puti(e);
	putc('\n');
	//puts(") = ");
	putc('r');
    putc('=');
	puti(result);
	putc('\n');
	//puts("\n");
	return 0;
}
